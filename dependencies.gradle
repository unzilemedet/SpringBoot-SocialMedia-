ext {
    versions = [
            springBoot    : "2.7.9",
            postgresql    : "42.5.4",
            lombok        : "1.18.26",
            openApi       : "1.6.14",
            mapStruct     : "1.5.3.Final",
            springCloud   : "3.1.5",
            jwt           : "4.3.0",
            circuitBreaker: "2.1.6"
    ]

    libs = [
            springBootWeb               : "org.springframework.boot:spring-boot-starter-web:$versions.springBoot",
            springBootJpa               : "org.springframework.boot:spring-boot-starter-data-jpa:$versions.springBoot",
            springBootValidation        : "org.springframework.boot:spring-boot-starter-validation:$versions.springBoot",
            postgresql                  : "org.postgresql:postgresql:$versions.postgresql",
            lombok                      : "org.projectlombok:lombok:$versions.lombok",
            openApi                     : "org.springdoc:springdoc-openapi-ui:$versions.openApi",
            //MapStruct
            mapStruct                   : "org.mapstruct:mapstruct:$versions.mapStruct",
            mapStructProcessor          : "org.mapstruct:mapstruct-processor:$versions.mapStruct",
            //FeignClient
            springOpenFeign             : "org.springframework.cloud:spring-cloud-starter-openfeign:$versions.springCloud",
            javaJWT                     : "com.auth0:java-jwt:$versions.jwt",
            //MongoDB
            mongoDB                     : "org.springframework.boot:spring-boot-starter-data-mongodb:${versions.springBoot}",
            //Config-server
            springCloudConfigServer     : "org.springframework.cloud:spring-cloud-config-server:$versions.springCloud",
            springCloudConfigClient     : "org.springframework.cloud:spring-cloud-config-client:$versions.springCloud",
            springCloudConfigStarter    : "org.springframework.cloud:spring-cloud-starter-config:$versions.springCloud",
            //ApiGateway
            springCloudStarterApiGateway: "org.springframework.cloud:spring-cloud-starter-gateway:$versions.springCloud",
            springCloudCircuitBreaker   : "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j:$versions.circuitBreaker",
            springCloudCircuitReactor   : "org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j:$versions.circuitBreaker",
            //Zipkin
            springCloudSleuthZipkin: "org.springframework.cloud:spring-cloud-sleuth-zipkin:$versions.springCloud",
            springCloudSleuth: "org.springframework.cloud:spring-cloud-starter-sleuth:$versions.springCloud",
            //RabbitMQ
            springBootRabbitMQ: "org.springframework.boot:spring-boot-starter-amqp:$versions.springBoot",
            //REDIS
            springBootDataRedis: "org.springframework.boot:spring-boot-starter-data-redis:$versions.springBoot",
            //MailSender
            springBootMailSender: "org.springframework.boot:spring-boot-starter-mail:$versions.springBoot",
            //ElasticSearch
            springBootElasticSearch: "org.springframework.boot:spring-boot-starter-data-elasticsearch:$versions.springBoot",
            //Security
            springBootSecurity: "org.springframework.boot:spring-boot-starter-security:$versions.springBoot"
    ]
}